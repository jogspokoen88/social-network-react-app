{"version":3,"sources":["components/redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","components/Users/users.module.css","assets/images/user-image-png.png","assets/images/Ring-Preloader.gif","Api/api.js","serviceWorker.js","components/redux/friendsReducer.js","components/redux/users-reducer.js","components/redux/auth-reducer.js","components/redux/app-reducer.js","components/redux/redux-store.js","components/Navbar/Navbar.jsx","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","HOC/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/redux/profile-reducer.js"],"names":["initialState","dialogs","name","id","messages","message","sendMessageCreator","newMessageText","type","dialogsReducer","state","action","body","module","exports","instanse","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","friends","friendsReducer","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","filter","SET_USER_DATA","iaAuth","setAuthUserData","isAuth","payload","getAuthUserData","dispatch","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","friendsPage","usersPage","auth","form","fromReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","props","className","s","nav","item","activeLink","to","activeClassName","User","user","src","photos","small","userPhoto","disabled","some","onClick","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","cn","selectedPage","pageNumber","key","e","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","followSuccess","unfollowSuccess","page","items","totalCount","Header","header","alt","loginBlock","HeaderContainer","a","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","formSummaryError","length","stopSubmit","_error","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","withRouter","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","posts","likeCounts","profile","addPostActionCreator","newPostText","getUserProfile","log","setStatus","newPost"],"mappings":"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","file":"static/js/main.89ad23fc.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\n\nlet initialState = {\n  dialogs: [\n    {name: \"Sergey\", id: \"1\"},\n    {name: \"Ksenia\", id: \"2\"},\n    {name: \"Andrey\", id: \"3\"},\n    {name: \"Victor\", id: \"4\"},\n    {name: \"Sveta\", id: \"5\"},\n    {name: \"Oleg\", id: \"6\"},\n  ],\n  messages: [\n    {id: \"1\", message: \"Hi\"},\n    {id: \"2\", message: \"Yo\"},\n    {id: \"3\", message: \"Yep\"},\n    {id: \"4\", message: \"Yep\"},\n    {id: \"5\", message: \"Yep\"}\n  ]\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n  let stateCopy = {\n    ...state\n  }\n\n  switch (action.type) {\n    case SEND_MESSAGE: {\n      let body = action.newMessageText\n      return {\n        ...state,\n        messages: [...state.messages, {id: \"6\", message: body}]\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\n\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1-Gom\",\"item\":\"Navbar_item__1Q1I0\",\"activeLink\":\"Navbar_activeLink__1JJla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1qRhZ\"};","module.exports = __webpack_public_path__ + \"static/media/user-image-png.6df4521c.png\";","module.exports = __webpack_public_path__ + \"static/media/Ring-Preloader.2407b512.gif\";","import * as axios from \"axios\";\n\nconst instanse = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\"API-KEY\": \"3e590a45-8f63-45a3-a303-faffb020dba6\"}\n})\n\n\nexport const usersAPI = {\n  getUsers(currentPage, pageSize) {\n    return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\n        .then(response => {\n          return response.data\n        })\n  },\n  follow(userId) {\n    return instanse.post(`follow/${userId}`)\n  },\n  unfollow(userId) {\n    return instanse.delete(`follow/${userId}`)\n  },\n  getProfile(userId) {\n    return profileAPI.getProfile(userId)\n  }\n}\n\n\nexport const profileAPI = {\n\n  getProfile(userId) {\n    return instanse.get(`profile/` + userId)\n  },\n  getStatus(userId) {\n    return instanse.get(`profile/status/` + userId)\n  },\n  updateStatus(status) {\n    return instanse.put(`profile/status/`, {status: status})\n  }\n}\n\nexport const authAPI = {\n  me() {\n    return instanse.get(`auth/me`)\n  },\n  login(email, password, rememberMe = false) {\n    return instanse.post(`auth/login`, {email, password, rememberMe})\n  },\n  logout() {\n    return instanse.delete(`auth/login`)\n  }\n}\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\n  friends: [\n    {name: \"Anton\", id: \"1\"},\n    {name: \"Stepan\", id: \"2\"},\n    {name: \"Boris\", id: \"3\"}\n  ]\n}\n\nconst friendsReducer = (state = initialState, action) => {\n\nreturn state\n}\n\nexport default friendsReducer;","import {usersAPI} from \"../../Api/api\";\n\n\nconst FOLLOW = \"FOLLOW\"\nconst UNFOLLOW = \"UNFOLLOW\"\nconst SET_USERS = \"SET_USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\"\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\n\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [ ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: true}\n          }\n          return u\n        })\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: false}\n          }\n          return u\n        })\n      }\n    case SET_USERS: {\n      return {...state, users: action.users}\n    }\n    case SET_CURRENT_PAGE: {\n      return {...state, currentPage: action.currentPage}\n    }\n    case SET_USERS_TOTAL_COUNT: {\n      return {...state, totalUsersCount: action.count}\n    }\n    case TOGGLE_IS_FETCHING: {\n      return {...state, isFetching: action.isFetching}\n    }\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\n      return {...state,\n        followingInProgress: action.isFetching\n            ? [...state.followingInProgress, action.userId]\n            : state.followingInProgress.filter(id => id != action.userId)\n        }\n    }\n    default:\n      return state\n  }\n}\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\n\nexport const requestUsers = (page, pageSize) => {\n  return (dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n\n   usersAPI.getUsers(page, pageSize).then(data => {\n     dispatch(toggleIsFetching(false))\n     dispatch(setUsers(data.items))\n     dispatch(setUsersTotalCount(data.totalCount))\n     dispatch(setCurrentPage(page))\n      })\n    }\n  }\n\n\nexport const follow = (userId) => {\n  return (dispatch) => {\n   dispatch (toggleFollowingProgress(true, userId))\n    usersAPI.follow(userId)\n        .then(response => {\n          if (response.data.resultCode === 0) {\n            dispatch(followSuccess(userId))\n          }\n          dispatch(toggleFollowingProgress(false, userId))\n        })\n}}\n\n\nexport const unfollow = (userId) => {\n  return (dispatch) => {\n    dispatch (toggleFollowingProgress(true, userId))\n    usersAPI.unfollow(userId)\n        .then(response => {\n          if (response.data.resultCode === 0) {\n            dispatch(unfollowSuccess(userId))\n          }\n          dispatch(toggleFollowingProgress(false, userId))\n        })\n}}\n\n\nexport default usersReducer;","import {authAPI} from \"../../Api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\"\n\n\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  iaAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\nexport const getAuthUserData = () => (dispatch) => {\n  return authAPI.me()\n      .then(response => {\n        if (response.data.resultCode === 0) {\n          let {id, email, login} = response.data.data\n          dispatch(setAuthUserData(id, email, login, true))\n        }\n      })\n}\nexport const login = (email, password, rememberMe) => (dispatch) => {\n  authAPI.login(email, password, rememberMe)\n      .then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData())\n    } else {\n      let message = response.data.messages.length > 0\n          ? response.data.messages[0]\n          : \"some error\"\n      dispatch(stopSubmit(\"login\", {_error: message}))\n    }\n})\n}\n\nexport const logout = () => async (dispatch) => {\n  authAPI.logout()\n      .then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false))\n    }\n  })\n}\n\n\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\"\n\nlet initialState = {\n  initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n      ...state,\n      initialized: true\n    }\n    default:\n    return state\n  }\n}\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\nexport const initializeApp = () => dispatch => {\n      let promise = dispatch(getAuthUserData());\n      promise.then (()=> {\n        dispatch(initializedSuccess())\n      })\n  }\n\n\nexport default appReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport friendsReducer from \"./friendsReducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\"\nimport { reducer as fromReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  friendsPage: friendsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: fromReducer,\n  app: appReducer\n})\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\n\nwindow.store = store\n\nexport default store","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nconst Navbar = (props) => {\n  return (\n      <nav className={s.nav}>\n        <div className={`${s.item} ${s.activeLink}`}>\n          <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\n        </div>\n        {/*<Friends friends={props.friendsPage.friends}/>*/}\n      </nav>\n  )\n}\n\nexport default Navbar;","import React from \"react\";\nimport s from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user-image-png.png\";\nimport {NavLink} from \"react-router-dom\";\n\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n  return (\n    <div>\n          <span>\n            <div>\n              <NavLink to={'/profile/' + user.id}>\n              <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto}/>\n              </NavLink>\n            </div>\n            <div>\n              {user.followed\n                  ? <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => {unfollow(user.id)}}>Unfollow</button>\n\n                  : <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => {follow(user.id)}}>follow</button>\n              },\n            </div>\n          </span>\n        <span>\n            <span>\n              <div>{user.name}</div>\n              <div>{user.status}</div>\n            </span>\n            <span>\n              <div>{\"user.location.country\"}</div>\n              <div>{\"user.location.city\"}</div>\n            </span>\n          </span>\n      </div>)\n}\n\n\nexport default User","import React, {useState} from \"react\"\nimport s from \"./Paginator.module.css\"\nimport cn from \"classnames\"\n\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize)\n  let pages = []\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i)\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize)\n  let [portionNumber, setPortionNumber] = useState(1)\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n  let rightPortionPageNumber = portionNumber * portionSize\n\n  return <div className ={s.paginator}>\n    {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>Previous</button>}\n\n    {pages\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n        .map(p => {\n      return <span className={cn ({\n        [s.selectedPage] : currentPage === p}, s.pageNumber)}\n      key={p}\n      onClick={(e) => {onPageChanged(p)}}>{p}</span>\n    })}\n    {portionCount > portionNumber && <button onClick={ () => {setPortionNumber(portionNumber + 1) }}>Next</button>}\n  </div>\n}\n\nexport default Paginator\n","import React from \"react\";\nimport User from \"./User\";\nimport Paginator from \"../common/Paginator/Paginator\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n  return <div>\n        <Paginator currentPage={currentPage}\n                   onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount}\n                   pageSize={pageSize}/>\n\n    {\n      users.map(u => <User user={u}\n                           followingInProgress={props.followingInProgress}\n                           key={u.id}\n                           unfollow={props.unfollow}\n                           follow={props.follow}/>)\n    }\n  </div>\n}\n\n\nexport default Users","import {createSelector} from \"reselect\"\n\nconst getUsersSelector = (state) => {\n  return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n  return users.filter(u => true)\n})\n\nexport const getPageSize = (state) => {\n  return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n  return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state) => {\n  return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state) => {\n  return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state) => {\n  return state.usersPage.followingInProgress\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n  follow,\n  requestUsers,\n  setCurrentPage,\n  toggleFollowingProgress,\n  unfollow\n} from \"../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount, getUsers\n} from \"../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize)\n  }\n  onPageChanged = (pageNumber) => {\n    this.props.getUsers(pageNumber, this.props.pageSize)\n    this.props.setCurrentPage(pageNumber)\n  }\n\n  render() {\n    return <>\n      {this.props.isFetching ? <Preloader/> : null}\n      <Users totalUsersCount={this.props.totalUsersCount}\n             pageSize={this.props.pageSize}\n             currentPage={this.props.currentPage}\n             onPageChanged={this.onPageChanged}\n             users={this.props.users}\n             follow={this.props.follow}\n             unfollow={this.props.unfollow}\n             followingInProgress={this.props.followingInProgress}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  }\n}\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n  return (\n      <header className={s.header}>\n        <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\" alt=\"logo\"/>\n        <div className={s.loginBlock}>\n          {props.isAuth\n              ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\n              : <NavLink to={'/login'}>Войти</NavLink>}\n        </div>\n      </header>\n  )\n}\n\nexport default Header;\n\n","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../redux/auth-reducer\";\n\n\nclass HeaderContainer extends React.Component {\n  render() {\n    return <Header {...this.props} />\n\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n})\n\n\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);\n\n","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport s from \"../common/FormsControls/FormsControls.module.css\"\nimport {Input} from \"../common/FormsControls/FormsControls\";\n\nconst LoginForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field placeholder={\"Email\"} name={\"email\"} validate={[required]} component={Input}/>\n        </div>\n        <div>\n          <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} validate={[required]} component={Input}/>\n        </div>\n        <div>\n          <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"} /> remember me\n        </div>\n        {props.error && <div className={s.formSummaryError}>\n          {props.error}\n        </div>\n        }\n        <div>\n          <button>Login</button>\n        </div>\n      </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe)\n  }\n  if(props.isAuth) {\n    return <Redirect to={'/profile'} />\n  }\n  return <div>\n    <h1>Login</h1>\n    <LoginReduxForm onSubmit={onSubmit}/>\n  </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login}) (Login)","import React from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n        <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./components/redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./HOC/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import ('./components/Profile/ProfileContainer'))\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n  render() {\n    if (!this.props.initialized) {\n    return <Preloader />\n    }\n    return (\n        <div className='app-wrapper'>\n          <HeaderContainer/>\n          <Navbar/>\n          <div className='app-wrapper-content'>\n            <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n            <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n            <Route path='/users' render={() => <UsersContainer/>}/>\n            <Route path='/login' render={() => <LoginPage/>}/>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose (\n    withRouter,\n    connect(mapStateToProps, {initializeApp})) (App);\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./components/redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter basename = {process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\nserviceWorker.unregister();","import preloader from \"../../../assets/images/Ring-Preloader.gif\";\nimport React from \"react\";\n\nlet Preloader = (props)=> {\n  return <img src={preloader}/>\n}\n\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3v_MN\",\"error\":\"FormsControls_error__2kGne\",\"formSummaryError\":\"FormsControls_formSummaryError__14yee\"};","import React from \"react\";\nimport s from \"./FormsControls.module.css\"\n\n\nexport const FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormControl {...props}> <input {...input} {...restProps}/> </FormControl>\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1Kykp\",\"pageNumber\":\"Paginator_pageNumber__fty3d\",\"selectedPage\":\"Paginator_selectedPage__Zt2g-\"};","export const required = value => {\n  if (value) return undefined\n  return 'Field id required'\n}\n\nexport const maxLengthCreator = maxLength => (value) => {\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n  return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1QSXI\",\"loginBlock\":\"Header_loginBlock__2ZbUD\"};","import {profileAPI, usersAPI} from \"../../Api/api\";\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\n\nlet initialState = {\n  posts: [\n    {message: \"Yellow greenback\", likeCounts: \"15\"},\n    {message: \"React Redux\", likeCounts: \"19\"},\n  ],\n  profile: null,\n  status: \"\"\n}\n\nconst profileReducer = (state = initialState, action) => {\n  let stateCopy = {...state}\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = {message: action.newPostText, likeCounts: 0}\n      return {...state, posts: [...state.posts, newPost], newPostText: ''}\n    }\n    case SET_USER_PROFILE: {\n      return {...state, profile: action.profile}\n    }\n    case SET_STATUS: {\n      return {...state, status: action.status}\n    }\n    default:\n      return state\n  }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\n\nexport const getUserProfile = (userId) => (dispatch) => {\n usersAPI.getProfile(userId).then(response => {\n   console.log(response); dispatch(setUserProfile(response.data))\n   })\n}\n\nexport const getStatus = (userId) => (dispatch) => {\n profileAPI.getStatus(userId).then(response => {\n   dispatch(setStatus(response.data))\n   })\n}\n\nexport const updateStatus = (status) => (dispatch) => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status))\n    }\n  })\n}\n\nexport const setStatus = (status) => ({type: SET_STATUS, status})\n\nexport default profileReducer;"],"sourceRoot":""}