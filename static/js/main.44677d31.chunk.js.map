{"version":3,"sources":["assets/images/user-image-png.png","Api/api.js","components/Navbar/Navbar.module.css","components/redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/Ring-Preloader.gif","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/redux/users-reducer.js","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/redux/app-reducer.js","components/redux/redux-store.js","HOC/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/redux/profile-reducer.js"],"names":["module","exports","instanse","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","name","id","messages","message","sendMessageCreator","newMessageText","type","dialogsReducer","state","action","body","FormControl","input","meta","props","child","hasError","touched","error","className","s","formControl","children","Textarea","restProps","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","nav","item","activeLink","to","activeClassName","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","filter","User","user","src","photos","small","userPhoto","disabled","some","onClick","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","cn","selectedPage","pageNumber","key","e","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","dispatch","resultCode","followSuccess","unfollowSuccess","page","items","totalCount","Header","header","alt","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","a","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","length","stopSubmit","_error","initialized","globalError","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","value","maxLengthCreator","maxLength","posts","likeCounts","addPostActionCreator","newPostText","getUserProfile","log","setStatus","file","savePhotoSuccess","getState","reject","newPost"],"mappings":"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","file":"static/js/main.44677d31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-image-png.6df4521c.png\";","import * as axios from \"axios\";\n\nconst instanse = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\"API-KEY\": \"3e590a45-8f63-45a3-a303-faffb020dba6\"}\n})\n\n\nexport const usersAPI = {\n  getUsers(currentPage, pageSize) {\n    return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\n        .then(response => {\n          return response.data\n        })\n  },\n  follow(userId) {\n    return instanse.post(`follow/${userId}`)\n  },\n  unfollow(userId) {\n    return instanse.delete(`follow/${userId}`)\n  },\n  getProfile(userId) {\n    return profileAPI.getProfile(userId)\n  }\n}\n\nexport const profileAPI = {\n\n  getProfile(userId) {\n    return instanse.get(`profile/` + userId)\n  },\n  getStatus(userId) {\n    return instanse.get(`profile/status/` + userId)\n  },\n  updateStatus(status) {\n    return instanse.put(`profile/status/`, {status: status})\n  },\n  savePhoto(photoFile) {\n    const formData = new FormData()\n    formData.append(\"image\", photoFile)\n\n    return instanse.put(`profile/photo`, formData, {\n      headers: {\n        'Content-type': 'multipart/form-data'\n      }\n    })\n  },\n  saveProfile(profile) {\n    return instanse.put(`profile`, profile)\n  }\n}\n\n\nexport const authAPI = {\n  me() {\n    return instanse.get(`auth/me`)\n  },\n  login(email, password, rememberMe = false, captcha = null) {\n    return instanse.post(`auth/login`, {email, password, rememberMe, captcha})\n  },\n  logout() {\n    return instanse.delete(`auth/login`)\n  }\n}\n\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instanse.get(`security/get-captcha-url`)\n  }\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__5mqZ1\",\"item\":\"Navbar_item__aQNpD\",\"activeLink\":\"Navbar_activeLink__1SjDg\"};","const SEND_MESSAGE = 'SEND-MESSAGE'\n\nlet initialState = {\n  dialogs: [\n    {name: \"Sergey\", id: \"1\"},\n    {name: \"Ksenia\", id: \"2\"},\n    {name: \"Andrey\", id: \"3\"},\n    {name: \"Victor\", id: \"4\"},\n    {name: \"Sveta\", id: \"5\"},\n    {name: \"Oleg\", id: \"6\"},\n  ],\n  messages: [\n    {id: \"1\", message: \"Hi\"},\n    {id: \"2\", message: \"Yo\"},\n    {id: \"3\", message: \"Yep\"},\n    {id: \"4\", message: \"Yep\"},\n    {id: \"5\", message: \"Yep\"}\n  ]\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n  let stateCopy = {\n    ...state\n  }\n\n  switch (action.type) {\n    case SEND_MESSAGE: {\n      let body = action.newMessageText\n      return {\n        ...state,\n        messages: [...state.messages, {id: \"6\", message: body}]\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\n\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3MJz2\"};","module.exports = __webpack_public_path__ + \"static/media/Ring-Preloader.2407b512.gif\";","import React from \"react\";\nimport s from \"./FormsControls.module.css\"\nimport {Field} from \"redux-form\";\n\n\n\nexport const FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormControl {...props}> <input {...input} {...restProps}/> </FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props ={}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nconst Navbar = (props) => {\n  return (\n      <nav className={s.nav}>\n        <div className={`${s.item} ${s.activeLink}`}>\n          <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\n        </div>\n        {/*<Friends friends={props.friendsPage.friends}/>*/}\n      </nav>\n  )\n}\n\nexport default Navbar;","import {usersAPI} from \"../../Api/api\";\n\n\nconst FOLLOW = \"FOLLOW\"\nconst UNFOLLOW = \"UNFOLLOW\"\nconst SET_USERS = \"SET_USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\"\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\n\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [ ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: true}\n          }\n          return u\n        })\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: false}\n          }\n          return u\n        })\n      }\n    case SET_USERS: {\n      return {...state, users: action.users}\n    }\n    case SET_CURRENT_PAGE: {\n      return {...state, currentPage: action.currentPage}\n    }\n    case SET_USERS_TOTAL_COUNT: {\n      return {...state, totalUsersCount: action.count}\n    }\n    case TOGGLE_IS_FETCHING: {\n      return {...state, isFetching: action.isFetching}\n    }\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\n      return {...state,\n        followingInProgress: action.isFetching\n            ? [...state.followingInProgress, action.userId]\n            : state.followingInProgress.filter(id => id != action.userId)\n        }\n    }\n    default:\n      return state\n  }\n}\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\n\nexport const requestUsers = (page, pageSize) => {\n  return (dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n\n   usersAPI.getUsers(page, pageSize).then(data => {\n     dispatch(toggleIsFetching(false))\n     dispatch(setUsers(data.items))\n     dispatch(setUsersTotalCount(data.totalCount))\n     dispatch(setCurrentPage(page))\n      })\n    }\n  }\n\n\nexport const follow = (userId) => {\n  return (dispatch) => {\n   dispatch (toggleFollowingProgress(true, userId))\n    usersAPI.follow(userId)\n        .then(response => {\n          if (response.data.resultCode === 0) {\n            dispatch(followSuccess(userId))\n          }\n          dispatch(toggleFollowingProgress(false, userId))\n        })\n}}\n\n\nexport const unfollow = (userId) => {\n  return (dispatch) => {\n    dispatch (toggleFollowingProgress(true, userId))\n    usersAPI.unfollow(userId)\n        .then(response => {\n          if (response.data.resultCode === 0) {\n            dispatch(unfollowSuccess(userId))\n          }\n          dispatch(toggleFollowingProgress(false, userId))\n        })\n}}\n\n\nexport default usersReducer;","import React from \"react\";\nimport s from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user-image-png.png\";\nimport {NavLink} from \"react-router-dom\";\n\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n  return (\n    <div>\n          <span>\n            <div>\n              <NavLink to={'/profile/' + user.id}>\n              <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto}/>\n              </NavLink>\n            </div>\n            <div>\n              {user.followed\n                  ? <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => {unfollow(user.id)}}>Unfollow</button>\n\n                  : <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => {follow(user.id)}}>follow</button>\n              },\n            </div>\n          </span>\n        <span>\n            <span>\n              <div>{user.name}</div>\n              <div>{user.status}</div>\n            </span>\n            <span>\n              <div>{\"user.location.country\"}</div>\n              <div>{\"user.location.city\"}</div>\n            </span>\n          </span>\n      </div>)\n}\n\n\nexport default User","import React, {useState} from \"react\"\nimport s from \"./Paginator.module.css\"\nimport cn from \"classnames\"\n\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize)\n  let pages = []\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i)\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize)\n  let [portionNumber, setPortionNumber] = useState(1)\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n  let rightPortionPageNumber = portionNumber * portionSize\n\n  return <div className ={s.paginator}>\n    {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>Previous</button>}\n\n    {pages\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n        .map(p => {\n      return <span className={cn ({\n        [s.selectedPage] : currentPage === p}, s.pageNumber)}\n      key={p}\n      onClick={(e) => {onPageChanged(p)}}>{p}</span>\n    })}\n    {portionCount > portionNumber && <button onClick={ () => {setPortionNumber(portionNumber + 1) }}>Next</button>}\n  </div>\n}\n\nexport default Paginator\n","import React from \"react\";\nimport User from \"./User\";\nimport Paginator from \"../common/Paginator/Paginator\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n  return <div>\n        <Paginator currentPage={currentPage}\n                   onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount}\n                   pageSize={pageSize}/>\n\n    {\n      users.map(u => <User user={u}\n                           followingInProgress={props.followingInProgress}\n                           key={u.id}\n                           unfollow={props.unfollow}\n                           follow={props.follow}/>)\n    }\n  </div>\n}\n\n\nexport default Users","import {createSelector} from \"reselect\"\n\nconst getUsersSelector = (state) => {\n  return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n  return users.filter(u => true)\n})\n\nexport const getPageSize = (state) => {\n  return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n  return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state) => {\n  return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state) => {\n  return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state) => {\n  return state.usersPage.followingInProgress\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n  follow,\n  requestUsers,\n  setCurrentPage,\n  toggleFollowingProgress,\n  unfollow\n} from \"../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount, getUsers\n} from \"../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize)\n  }\n  onPageChanged = (pageNumber) => {\n    this.props.getUsers(pageNumber, this.props.pageSize)\n    this.props.setCurrentPage(pageNumber)\n  }\n\n  render() {\n    return <>\n      {this.props.isFetching ? <Preloader/> : null}\n      <Users totalUsersCount={this.props.totalUsersCount}\n             pageSize={this.props.pageSize}\n             currentPage={this.props.currentPage}\n             onPageChanged={this.onPageChanged}\n             users={this.props.users}\n             follow={this.props.follow}\n             unfollow={this.props.unfollow}\n             followingInProgress={this.props.followingInProgress}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  }\n}\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n  return (\n      <header className={s.header}>\n        <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\" alt=\"logo\"/>\n        <div className={s.loginBlock}>\n          {props.isAuth\n              ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\n              : <NavLink to={'/login'}>Войти</NavLink>}\n        </div>\n      </header>\n  )\n}\n\nexport default Header;\n\n","import {authAPI, securityAPI} from \"../../Api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null // if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../redux/auth-reducer\";\n\n\nclass HeaderContainer extends React.Component {\n  render() {\n    return <Header {...this.props} />\n\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n})\n\n\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);\n\n","import React from 'react'\nimport {reduxForm} from \"redux-form\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport s from \"../common/FormsControls/FormsControls.module.css\"\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n  return (\n      <form onSubmit={handleSubmit}>\n          {createField(\"Email\", \"email\", [required], Input)}\n          {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n          {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n          {captchaUrl && <img src={captchaUrl}/>}\n          {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {} )}\n\n        {error && <div className={s.formSummaryError}>\n          {error}\n        </div>\n        }\n        <div>\n          <button>Login</button>\n        </div>\n      </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n  }\n  if(props.isAuth) {\n    return <Redirect to={'/profile'} />\n  }\n  return <div>\n    <h1>Login</h1>\n    <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n  </div>\n}\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login}) (Login)","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false,\n    globalError: null\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.__store__ = store;\n\nexport default store;","import React from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n        <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./components/redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./components/redux/redux-store\";\nimport {withSuspense} from \"./HOC/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n    catchAllUnhandledErrors = (reason, promise) => {\n        alert(\"Some error occured\");\n        //console.error(promiseRejectionEvent);\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/'\n                               render={() => <Redirect to={\"/profile\"}/>}/>\n\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n\n                        <Route path='/login'\n                               render={() => <LoginPage/>}/>\n\n                        <Route path='*'\n                               render={() => <div>404 NOT FOUND</div>}/>\n                    </Switch>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from \"../../../assets/images/Ring-Preloader.gif\";\nimport React from \"react\";\n\nlet Preloader = (props)=> {\n  return <img src={preloader}/>\n}\n\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__10X5y\",\"error\":\"FormsControls_error__2OgKJ\",\"formSummaryError\":\"FormsControls_formSummaryError__1cX21\"};","export const required = value => {\n  if (value) return undefined\n  return 'Field id required'\n}\n\nexport const maxLengthCreator = maxLength => (value) => {\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n  return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1Nbld\",\"pageNumber\":\"Paginator_pageNumber__3cXUK\",\"selectedPage\":\"Paginator_selectedPage__29fG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1mWRG\",\"loginBlock\":\"Header_loginBlock__3KVy_\"};","import {profileAPI, usersAPI} from \"../../Api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\n\nlet initialState = {\n  posts: [\n    {message: \"Yellow greenback\", likeCounts: \"15\"},\n    {message: \"React Redux\", likeCounts: \"19\"},\n  ],\n  profile: null,\n  status: \"\"\n}\n\nconst profileReducer = (state = initialState, action) => {\n  let stateCopy = {...state}\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = {message: action.newPostText, likeCounts: 0}\n      return {...state, posts: [...state.posts, newPost], newPostText: ''}\n    }\n    case SET_USER_PROFILE: {\n      return {...state, profile: action.profile}\n    }\n    case SET_STATUS: {\n      return {...state, status: action.status}\n    }\n    case SAVE_PHOTO_SUCCESS: {\n      return {...state, profile: {...state.profile, photos: action.photos}}\n      }\n    default:\n      return state\n  }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\n\nexport const getUserProfile = (userId) => (dispatch) => {\n usersAPI.getProfile(userId).then(response => {\n   console.log(response); dispatch(setUserProfile(response.data))\n   })\n}\n\nexport const getStatus = (userId) => (dispatch) => {\n profileAPI.getStatus(userId).then(response => {\n   dispatch(setStatus(response.data))\n   })\n}\n\nexport const updateStatus = (status) => (dispatch) => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status))\n    }\n  })\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n  let response = await profileAPI.savePhoto(file)\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos))\n  }\n}\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n  const userId = getState().auth.userId\n  const response = await profileAPI.saveProfile(profile)\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId))\n  } else {\n    dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\n    return Promise.reject(response.data.messages[0])\n  }\n}\n\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\nexport default profileReducer;"],"sourceRoot":""}