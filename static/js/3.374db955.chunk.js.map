{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","s","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","srcSet","alt","message","likeCounts","maxLength10","maxLengthCreator","Field","component","name","validate","required","MyPosts","postsElements","posts","p","id","React","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.374db955.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__cdw4G\",\"contact\":\"ProfileInfo_contact__3ap6t\",\"mainPhoto\":\"ProfileInfo_mainPhoto__15O5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__12nEF\",\"posts\":\"MyPosts_posts__1myxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__16wdL\"};","import React, {useEffect, useState} from \"react\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false)\n  let [status, setStatus] = useState(props.status)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value)\n  }\n\n  return (\n      <>\n        { !editMode &&\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || \"empty\"}</span>\n        </div>\n        }\n        { editMode &&\n        <div>\n          <input autoFocus={true} onBlur={deactivateEditMode}  onChange={onStatusChange} value={status}/>\n        </div>\n        }\n      </>\n  )\n}\n\n\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea,)}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea,)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={style.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user-image-png.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n        savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n      saveProfile(formData).then(()=> {\r\n          setEditMode(false)\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n      <div>\r\n          <div className={s.descriptionBlock}>\r\n              <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n              <div>{isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}</div>\r\n              {editMode\r\n                  ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                  : <ProfileData goToEditMode={()=>{setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n return <div>\r\n     {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n         <b>Full name</b>: {profile.fullName}\r\n     </div>\r\n\r\n     <div>\r\n         <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n     </div>\r\n\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n           <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>}\r\n\r\n        <div>\r\n         <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n\r\n     <div>\r\n       <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n       return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n       })}\r\n    </div>\r\n </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n      <div className={s.item}>\n        <img srcSet=\"https://i.ytimg.com/vi/E8Bilsz7x5s/hqdefault.jpg\" alt=\"\"/>\n        {props.message}\n        <div>\n          <span>like</span> {props.likeCounts}\n        </div>\n      </div>\n\n  )\n}\n\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport React from \"react\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddNewPostForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n        <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} />\n        <button>Add</button>\n      </form>\n  )\n}\n\nexport default reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm)","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport AddNewPostForm from \"../AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCounts={p.likeCounts}/>)\r\n\r\n  let NewPostElement = React.createRef()\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n      <div className={s.postsBlock}>\r\n        <h3>MyPosts</h3>\r\n        <AddNewPostForm onSubmit={onAddPost}/>\r\n\r\n        <div className={s.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    }\n  }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\r\nimport './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n      <div>\r\n        <ProfileInfo savePhoto={props.savePhoto}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     saveProfile={props.saveProfile}\r\n                     updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer store={props.store}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './Profile.module.css'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n     this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Profile {...this.props}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 updateStatus={this.props.updateStatus}\r\n                 savePhoto={this.props.savePhoto}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  })\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)"],"sourceRoot":""}