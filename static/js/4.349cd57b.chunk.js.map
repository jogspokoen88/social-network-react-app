{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","HOC/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Messages","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","Message","newMessageText","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCYpMC,EATI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCKnBC,EARE,SAACT,GAChB,OACI,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,0CCFlCC,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,wBAAjBD,EAbQ,SAACb,GACtB,OACI,0BAAMe,SAAUf,EAAMgB,cACpB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAM,iBAAkBc,YAAa,uBAC5C,6BACE,6CCoBKC,EA1BC,SAACvB,GACf,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE3B,GAAIA,GAAI2B,EAAE3B,QACpF6B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAACC,EAAD,CAAUxB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE/B,QAC/DsB,EAAMW,eAK3B,OAAKnC,EAAMoC,OAGP,yBAAKjC,UAAWC,IAAEuB,SAChB,yBAAKxB,UAAWC,IAAEiC,cACfX,GAEH,yBAAKvB,UAAWC,IAAE4B,UAChB,6BAAMD,IAER,kBAAC,EAAD,CAAgBhB,SAbF,SAACuB,GACnBtC,EAAMuC,YAAYD,EAAOH,oBAED,kBAAC,IAAD,CAAU5B,GAAI,Y,gDCbtCiC,EAA6B,SAAChB,GAAD,MAAY,CAC3CY,OAAQZ,EAAMiB,KAAKL,S,OCoBNM,sBACXC,aAjBoB,SAACnB,GACvB,MAAO,CACLC,YAAaD,EAAMC,YACnBU,eAAgBX,EAAMC,YAAYU,mBAIX,SAACS,GAC1B,MAAO,CACLL,YAAa,SAACJ,GACZS,EAASC,YAAmBV,UDXF,SAACW,GAAe,IACxCC,EADuC,iLAGzC,OAAKC,KAAKhD,MAAMoC,OACT,kBAACU,EAAaE,KAAKhD,OADK,kBAAC,IAAD,CAAUO,GAAI,eAHJ,GACb0C,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCS5DL,CAGbnB","file":"static/js/4.349cd57b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__28Qyb\",\"dialogsItems\":\"Dialogs_dialogsItems__3h1yV\",\"dialog\":\"Dialogs_dialog__2qc-e\",\"active\":\"Dialogs_active__2uG18\",\"messages\":\"Dialogs_messages__1rEao\",\"message\":\"Dialogs_message__2zr8p\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n      <div className={`${s.dialog} ${s.active}`}>\n        <NavLink to={path}>{props.name}</NavLink>\n      </div>\n  )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\n\n\nconst Messages = (props) => {\n  return (\n      <div className={s.message}>{props.message}</div>\n  )\n}\n\n\n\nexport default Messages;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport React from \"react\";\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n        <Field component={Textarea}\n               validate={[required, maxLength50]}\n               name={'newMessageText'} placeholder={'Enter your message'}/>\n        <div>\n          <button>Send</button>\n        </div>\n      </form>\n  )\n}\n\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Messages from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n  let messagesElements = state.messages.map(m => <Messages message={m.message} key={m.id}/>);\n  let newMessageText = state.newMessageText;\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageText)\n  }\n  if (!props.isAuth) return <Redirect to={'/login'}/>\n\n  return (\n      <div className={s.dialogs}>\n        <div className={s.dialogsItems}>\n          {dialogsElements}\n        </div>\n        <div className={s.messages}>\n          <div>{messagesElements}</div>\n        </div>\n        <AddMessageForm onSubmit={addNewMessage}/>\n      </div>\n  )\n}\n\n\n\nexport default Dialogs;","import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render () {\n      if (!this.props.isAuth) return <Redirect to={'/login'}/>\n      return <Component{...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectedAuthRedirectComponent\n}","import React from 'react';\nimport {sendMessageCreator} from \"../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n    newMessageText: state.dialogsPage.newMessageText,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageText) => {\n      dispatch(sendMessageCreator(newMessageText))\n    }\n  }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}