{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","mainBanner","src","alt","descriptionBlock","aboutMe","photos","large","lookingForAJob","lookingForAJobDescription","fullName","Preloader","Post","item","srcSet","message","likeCounts","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPosts","postsElements","posts","map","p","React","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.d82646b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__cdw4G\",\"mainBanner\":\"ProfileInfo_mainBanner__1Fhfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__12nEF\",\"posts\":\"MyPosts_posts__1myxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__16wdL\"};","import React, {useEffect, useState} from \"react\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false)\n  let [status, setStatus] = useState(props.status)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value)\n  }\n\n  return (\n      <>\n        { !editMode &&\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || \"empty\"}</span>\n        </div>\n        }\n        { editMode &&\n        <div>\n          <input autoFocus={true} onBlur={deactivateEditMode}  onChange={onStatusChange} value={status}/>\n        </div>\n        }\n      </>\n  )\n}\n\n\nexport default ProfileStatusWithHooks","import React from \"react\";\nimport s from './ProfileInfo.module.css'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader/>\n  }\n  return (\n      <div>\n        <div>\n          <img className={s.mainBanner}\n               src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\"\n               alt=\"banner\"/>\n        </div>\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n        <div className={s.descriptionBlock}>\n          <div>{props.profile.aboutMe}</div>\n          <img src={props.profile.photos.large}/>\n          <div>{props.profile.lookingForAJob}</div>\n          <div>{props.profile.lookingForAJobDescription}</div>\n          <div>{props.profile.fullName}</div>\n        </div>\n      </div>\n  )\n}\n\n\nexport default ProfileInfo;","import React from 'react';\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n      <div className={s.item}>\n        <img srcSet=\"https://i.ytimg.com/vi/E8Bilsz7x5s/hqdefault.jpg\" alt=\"\"/>\n        {props.message}\n        <div>\n          <span>like</span> {props.likeCounts}\n        </div>\n      </div>\n\n  )\n}\n\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport React from \"react\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddNewPostForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n        <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} />\n        <button>Add</button>\n      </form>\n  )\n}\n\nexport default reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm)","import React from 'react';\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport AddNewPostForm from \"../AddPostForm/AddPostForm\";\n\nconst MyPosts = (props) => {\n  let postsElements = props.posts.map(p => <Post message={p.message} likeCounts={p.likeCounts}/>)\n\n  let NewPostElement = React.createRef()\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText)\n  }\n\n  return (\n      <div className={s.postsBlock}>\n        <h3>MyPosts</h3>\n        <AddNewPostForm onSubmit={onAddPost}/>\n\n        <div className={s.posts}>\n          {postsElements}\n        </div>\n      </div>\n  )\n}\n\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    }\n  }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n      <div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n        <MyPostsContainer store={props.store}/>\n      </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport './Profile.module.css'\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId\n    if (!userId) {\n      userId = this.props.authorizedUserId\n    }\n    this.props.getUserProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n  render() {\n    return (\n        <Profile {...this.props}\n                 profile={this.props.profile}\n                 status={this.props.status}\n                 updateStatus={this.props.updateStatus}/>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n)(ProfileContainer)"],"sourceRoot":""}